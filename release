#! /bin/bash
# Create zipped release of GenLouvain

# error codes
TOO_MANY_INPUTS=1;
UNCLEAN_GIT=2;
FAILED_GIT=3;
DETACHED_HEAD=4;

# error handling
error () {
    case $1 in
        $TOO_MANY_INPUTS)
            echo "Too many input arguments" >&2;
            exit $1;;
        $UNCLEAN_GIT)
            echo "Git repository not clean" >&2;
            exit $1;;
        $FAILED_GIT)
            echo "Failed git operation" >&2;
            exit $1;;
        $DETACHED_HEAD)
            echo "Repository has a detached head, exiting";
            exit $1;;
        *)
            echo "Unknown error code" >&2;
            exit $1;;
    esac
}

# Parse inputs
case $# in
    0)
        read -p "Version number for release: " version;;
    
    1)  
        version=$@;;
    
    *)  
        error $TOO_MANY_INPUTS;
esac

# filename for archive
filename="GenLouvain$version.zip";

# test if git repository is clean and checkout version
test -z "$(git status --porcelain)" || error $UNCLEAN_GIT;
current_commit=$(git symbolic-ref --short HEAD)|| error $DETACHED_HEAD;
git checkout $version || error $FAILED_GIT;

# files to include in release
if [[ -e ".releaseinclude" ]]
then
	IFS=$'\n' read -d '' -r -a releasefiles < ".releaseinclude"
else
    releasefiles=($(git ls-files));
fi

echo "included files:"
for f in "${releasefiles[@]}"; do
    echo "$f";
done

rm $filename;
zip $filename ${releasefiles[@]};

git checkout $current_commit;

exit 0;

